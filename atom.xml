<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>帅帅</title>
  
  <subtitle>帅帅の博客</subtitle>
  <link href="https://liushuaishellby.xyz/atom.xml" rel="self"/>
  
  <link href="https://liushuaishellby.xyz/"/>
  <updated>2021-12-27T12:45:56.473Z</updated>
  <id>https://liushuaishellby.xyz/</id>
  
  <author>
    <name>帅帅</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式的学习（1）</title>
    <link href="https://liushuaishellby.xyz/posts/ccbf42c3.html"/>
    <id>https://liushuaishellby.xyz/posts/ccbf42c3.html</id>
    <published>2021-12-27T12:27:00.000Z</published>
    <updated>2021-12-27T12:45:56.473Z</updated>
    
    <content type="html"><![CDATA[<h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>今天学习的是 在python中使用正则表达式</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> remy_string <span class="token operator">=</span> <span class="token string">"aab22bsihhfshi"</span><span class="token comment"># 使用match 方法 匹配的字符必须是第一个开头的 注意在匹配字符前面最好加上r。防止识别不了\n...等等</span><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token string">r'a'</span><span class="token punctuation">,</span>my_string<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># &lt;re.Match object; span=(0, 1), match='a'&gt;</span><span class="token comment"># 使用 search 方法 匹配的字符 可以在任意位置</span><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'b'</span><span class="token punctuation">,</span>my_string<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;re.Match object; span=(2, 3), match='b'&gt;</span><span class="token comment"># 使用 findall方法 匹配的字符 所有的数据。返回的是一个列表</span><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'a'</span><span class="token punctuation">,</span>my_string<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># ['a', 'a']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="匹配"><a href="#匹配" class="headerlink" title="匹配"></a>匹配</h2><p>还有\d是匹配数字。\D匹配非数字</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'\d'</span><span class="token punctuation">,</span> my_string<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;re.Match object; span=(3, 4), match='2'&gt;</span><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'\D'</span><span class="token punctuation">,</span> my_string<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;re.Match object; span=(0, 1), match='a'&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="数量匹配"><a href="#数量匹配" class="headerlink" title="数量匹配"></a>数量匹配</h2><p>*代表模糊查询。匹配0此或者无数次。一般以最小次数匹配  即什么都没有</p><p>+代表  匹配1次或者无数次。最少也会匹配一次  ，一次做最大次数匹配</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'\d*'</span><span class="token punctuation">,</span> my_string<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;re.Match object; span=(0, 0), match=''&gt;</span><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'\d+'</span><span class="token punctuation">,</span> my_string<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;re.Match object; span=(3, 5), match='22'&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="group-属性方法-直接可以获取到匹配的字符。"><a href="#group-属性方法-直接可以获取到匹配的字符。" class="headerlink" title="group() 属性方法 直接可以获取到匹配的字符。"></a>group() 属性方法 直接可以获取到匹配的字符。</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'\d+'</span><span class="token punctuation">,</span> my_string<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 22</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        今天暂时就这么多i 嘿嘿。剩余的明天继续补充完整！1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h3&gt;&lt;p&gt;今天学习的是 在python中使用正则表达式&lt;/p&gt;
&lt;pre class=&quot;line-numbers langua</summary>
      
    
    
    
    <category term="自动化测试" scheme="https://liushuaishellby.xyz/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="cesium" scheme="https://liushuaishellby.xyz/tags/cesium/"/>
    
  </entry>
  
  <entry>
    <title>第一天</title>
    <link href="https://liushuaishellby.xyz/posts/4fc46fc5.html"/>
    <id>https://liushuaishellby.xyz/posts/4fc46fc5.html</id>
    <published>2021-12-26T15:21:00.000Z</published>
    <updated>2021-12-25T15:34:51.138Z</updated>
    
    <content type="html"><![CDATA[<p>相遇皆是缘分</p><h3 id="第一天的故事？"><a href="#第一天的故事？" class="headerlink" title="第一天的故事？"></a>第一天的故事？</h3><p>第一天</p><p>我在是第一次终于搬运了一个不错的博客，感谢大佬。</p><p>以后会在分享学习中遇到的问题以及解决方案。<br>还有很多没有弄明白的东西，后续在来补充吧！</p><p>溜溜球啦！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;相遇皆是缘分&lt;/p&gt;
&lt;h3 id=&quot;第一天的故事？&quot;&gt;&lt;a href=&quot;#第一天的故事？&quot; class=&quot;headerlink&quot; title=&quot;第一天的故事？&quot;&gt;&lt;/a&gt;第一天的故事？&lt;/h3&gt;&lt;p&gt;第一天&lt;/p&gt;
&lt;p&gt;我在是第一次终于搬运了一个不错的博客，感谢大佬。&lt;</summary>
      
    
    
    
    <category term="前言" scheme="https://liushuaishellby.xyz/categories/%E5%89%8D%E8%A8%80/"/>
    
    
    <category term="想法" scheme="https://liushuaishellby.xyz/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>博客与博主</title>
    <link href="https://liushuaishellby.xyz/posts/1.html"/>
    <id>https://liushuaishellby.xyz/posts/1.html</id>
    <published>2021-05-27T13:00:00.000Z</published>
    <updated>2021-09-07T14:52:39.538Z</updated>
    
    <content type="html"><![CDATA[<p>相遇皆是缘分</p><h3 id="为什么建博客？"><a href="#为什么建博客？" class="headerlink" title="为什么建博客？"></a>为什么建博客？</h3><p>肿么说了! 纯属个人兴趣，好玩，唉，就是玩!嘻嘻! 会有些成就感吧,拥有一个自己的博客写一些自己感兴趣的事或物,不是一件很酷的事嘛!</p><h3 id="展望博客"><a href="#展望博客" class="headerlink" title="展望博客"></a>展望博客</h3><p>我会整理一些个人所学的知识（学前端的，也会捣鼓捣鼓一些其它的专业的知识）或生活方面有兴趣的事发到博客上供大家观摩</p><h3 id="关于博主"><a href="#关于博主" class="headerlink" title="关于博主"></a>关于博主</h3><p>有位可爱的（小）朋友，给我取名叫 “仙气”，这是也是我博客上自居 “仙气” 的由来。喜欢自己所喜欢的，做自己想做的，追求自由与潇洒，多酷啊！ 想法是美好的，可现实… …   给大家推荐一首诗吧</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> 《自由与爱情》---作者:裴多菲​ 生命诚可贵​ 爱情价更高​ 若为自由故​ 二者皆可抛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>溜溜球啦！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;相遇皆是缘分&lt;/p&gt;
&lt;h3 id=&quot;为什么建博客？&quot;&gt;&lt;a href=&quot;#为什么建博客？&quot; class=&quot;headerlink&quot; title=&quot;为什么建博客？&quot;&gt;&lt;/a&gt;为什么建博客？&lt;/h3&gt;&lt;p&gt;肿么说了! 纯属个人兴趣，好玩，唉，就是玩!嘻嘻! 会有些成就感吧,拥有</summary>
      
    
    
    
    <category term="生活" scheme="https://liushuaishellby.xyz/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="想法" scheme="https://liushuaishellby.xyz/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
</feed>
